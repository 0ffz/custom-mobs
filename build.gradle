import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id "com.jarnoharno.github-packages" version "1.0.0"
}

group = 'com.mineinabyss'
version = plugin_version

if (project.hasProperty("buildNo")) version += ".$buildNo"

sourceCompatibility = 1.8
targetCompatibility = 1.8

def github_username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
def github_password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
githubPackages {
    username = github_username
    accessToken = github_password
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven githubPackages("MineInAbyss/Idofront")
    maven githubPackages("MineInAbyss/Guiy")
    maven githubPackages("CultOfClang/Minecraft")
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://erethon.de/repo/' } //HeadLib
    maven { url 'https://hub.spigotmc.org/nexus/content/groups/public/' }
    maven { url 'https://jitpack.io' } //JitPack
    maven { url "https://repo.dmulloy2.net/nexus/repository/public/" }
    maven { url 'https://maven.sk89q.com/repo/' } //WorldGuard/Edit
    mavenLocal()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    getArchiveClassifier().set('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    getArchiveClassifier().set('javadoc')
    from javadoc.destinationDir
}

publishing {
    repositories {
        maven githubPackages("MineInAbyss/Mobzy")
    }
    publications {
        gpr(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:$server_version" //Spigot
    compileOnly "org.spigotmc:spigot:$server_version" // NMS
    compileOnly "de.erethon:headlib:3.0.2"
    compileOnly "com.sk89q.worldguard:worldguard-bukkit:7.0.2" //WorldGuard
    compileOnly "com.comphenix.protocol:ProtocolLib:4.5.0"
    compileOnly "com.github.WesJD.AnvilGUI:anvilgui:5e3ab1f721"
    compileOnly "org.cultofclang.minecraft:kotlinspice:$kotlin_version+"

    if (project.hasProperty("useLocalGuiy") && useLocalGuiy.toBoolean()) implementation "com.derongan.minecraft:guiy"
    else implementation "com.derongan.minecraft:guiy:0.1.+"

    if (project.hasProperty("useLocalIdofront") && useLocalIdofront.toBoolean()) implementation "com.mineinabyss:idofront"
    else implementation "com.mineinabyss:idofront:0.1.+"
}

shadowJar {
    getArchiveBaseName().set("Mobzy")
    getArchiveClassifier().set(null)

    relocate 'com.derongan.minecraft.guiy', "${project.group}.${project.name}.guiy".toLowerCase()
    relocate 'com.mineinabyss.idofront', "${project.group}.${project.name}.idofront".toLowerCase()

    minimize {
        exclude(dependency('de.erethon:headlib:3.0.2'))
        exclude(dependency('com.github.WesJD.AnvilGUI:anvilgui:5e3ab1f721'))
    }
}
build.dependsOn shadowJar

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [plugin_version: plugin_version]
    }
}

compileKotlin { kotlinOptions { jvmTarget = "1.8" } }
compileTestKotlin { kotlinOptions { jvmTarget = "1.8" } }

//Move into plugins folder
if (project.hasProperty("plugin_path") && plugin_path) {
    println("Copying to plugin directory $plugin_path")
    task copyJar(type: Copy) {
        from shadowJar // here it automatically reads jar file produced from jar task
        into plugin_path
    }
    build.dependsOn copyJar
}